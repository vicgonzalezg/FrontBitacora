(function(c) {
    c.fn.jalendar = function(f) {
        function C() {
            u[1] = E(F);
            var n = new Date;
            n.setFullYear(p, h, 0);
            n = n.getDay() + A;
            a.find(".header h1").html(m[b.lang][h] + " " + p + '<div class="total-bar"></div>');
            a.find(".day").html("&nbsp;").removeAttr("data-date").removeClass("this-month have-event disable-selecting");
            for (var d = 0; d < 42 - (n + u[h]); d++) a.find(".day").eq(n + u[h] + d).html("<span>" + (d + 1) + "</span>");
            for (d = 0; d < n; d++) { var e = void 0 == u[h - 1] ? u[11] : u[h - 1];
                a.find(".day").eq(d).html("<span>" + (e - n + (d + 1)) + "</span>") }
            for (d =
                1; d <= u[h]; d++) {
                n++;
                var f;
                e = h + 1;
                !0 === b.dayWithZero && (d = 10 > d ? "0" + d : d);
                !0 === b.monthWithZero && (e = 9 > h ? "0" + (h + 1) : h + 1);
                "dd-mm-yyyy" == b.dateType ? f = d + "-" + e + "-" + p : "mm-dd-yyyy" == b.dateType ? f = e + "-" + d + "-" + p : "yyyy-mm-dd" == b.dateType ? f = p + "-" + e + "-" + d : "yyyy-dd-mm" == b.dateType && (f = p + "-" + d + "-" + e);
                "linker" == b.type ? a.find(".day").eq(n - 1).addClass("this-month").attr("data-date", f).html('<span><a href="' + b.customUrl + f + '">' + d + "</a></span>") : a.find(".day").eq(n - 1).addClass("this-month").attr("data-date", f).html("<span>" +
                    d + "</span>");
                var k = Math.round((new Date(p + "/" + (h + 1) + "/" + d + " 00:00:00")).getTime() / 1E3),
                    l = Math.round((new Date(I + "/" + (J + 1) + "/" + K + " 00:00:00")).getTime() / 1E3);
                1 == b.selectingBeforeToday && k > l && a.find(".day").eq(n - 1).addClass("disable-selecting");
                1 == b.selectingAfterToday && k < l && a.find(".day").eq(n - 1).addClass("disable-selecting");
                a.find(".days").attr("data-month", e).attr("data-year", p)
            }
            h == y.getMonth() && p == y.getFullYear() ? a.find(".day.this-month").removeClass("today").eq(L - 1).addClass("today") : a.find(".day.this-month").removeClass("today").attr("style",
                "");
            a.find(".added-event").each(function(b) { c(this).attr("data-id", b);
                a.find('.this-month[data-date="' + c(this).attr("data-date") + '"]').addClass("have-event " + c(this).data("type")).append(g("div", "event-single").attr("data-id", b).append(g("a", "").attr("href", c(this).attr("data-link")).attr("target", "blank").text(c(this).attr("data-title")))) });
            M();
            null !== b.dayColor && a.find(".day span, .day span a").css({ color: b.dayColor });
            null !== b.titleColor && a.find(".header h1, .header .prv-m, .header .nxt-m, .event-single p, h3, .close-button").css({ color: b.titleColor });
            null !== b.weekColor && a.find("h2").css({ color: b.weekColor });
            null !== b.todayColor && a.find(".day.this-month.today span, .day.this-month.today span a").css({ color: b.todayColor });
            "#fff" != b.color && "#ffffff" != b.color && "white" != b.color || a.find(".header h1, .header .prv-m, .header .nxt-m, .day.today span, h2, .event-single p, h3, .close-button").css({ "text-shadow": "none" })
        }

        function M() { var b = a.find(".this-month .event-single").length;
            0 == b && a.find(".total-bar").hide(0);
            a.find(".total-bar").text(b);
            a.find(".events h3 span").text(c(".jalendar .day.selected .event-single").length) }

        function D() { a.find(".day").removeClass("selected").removeAttr("style");
            a.find(".add-event").removeClass("selected").height(0) }

        function G() {
            a.find(".day").removeClass("first-range range last-range");
            if (null !== l)
                if (0 == a.find('[data-date="' + x.val() + '"]').length) {
                    if (v < Number(a.find(".days").attr("data-month")) && q >= Number(a.find(".days").attr("data-year")) || q < Number(a.find(".days").attr("data-year"))) l = 0;
                    else if (v > Number(a.find(".days").attr("data-month")) && q <= Number(a.find(".days").attr("data-year")) ||
                        q > Number(a.find(".days").attr("data-year"))) l = 42;
                    if (null !== B) { if (q == w && v == z) return !1; var b = parseInt(a.find(".days").attr("data-year"), 10),
                            d = parseInt(a.find(".days").attr("data-month"), 10);
                        (q < b && w > b || z > d && w >= b && q < b || v < d && q == b && z > d && w == b || v < d && w > b && q == b || v < d && q == b && z > d && w >= b) && a.find(".day").addClass("range") }
                } else l = a.find('[data-date="' + x.val() + '"]').index()
        }

        function H() {
            a.find('.day[data-date="' + x.val() + '"]').addClass("first-range");
            a.find('.day[data-date="' + t.val() + '"]').addClass("last-range");
            a.find('.day[data-date="' + x.val() + '"]').nextUntil('.day[data-date="' + t.val() + '"]').addClass("range");
            0 < a.find('.day[data-date="' + t.val() + '"]').length && (0 < a.find(".day.first-range").length ? a.find(".day.first-range").nextUntil(".day.last-range").addClass("range") : (a.find(".day:eq(" + l + ")").nextUntil(".day.last-range").addClass("range"), 0 == l && a.find(".day:eq(0)").addClass("range")))
        }
        var b = c.extend({
            customDay: new Date,
            color: "#3aa4d1",
            color2: "",
            lang: "EN",
            type: "",
            customUrl: "#",
            dateType: "dd-mm-yyyy",
            dayWithZero: !0,
            monthWithZero: !0,
            sundayStart: !1,
            dayColor: null,
            titleColor: null,
            weekColor: null,
            todayColor: null,
            selectingBeforeToday: !1,
            selectingAfterToday: !1,
            done: null
        }, f);
        f = {};
        var m = {},
            e = {},
            k = {};
        f.EN = "Mon Tue Wed Thu Fri Sat Sun".split(" ");
        f.TR = "Pzt Sal \u00c7ar Per Cum Cmt Pzr".split(" ");
        f.ES = "Lun Mar Mi\u00e9 Jue Vie S\u00e5b Dom".split(" ");
        f.DE = "Mon Die Mit Don Fre Sam Son".split(" ");
        f.FR = "Lun Mar Mer Jeu Ven Sam Dim".split(" ");
        f.IT = "Lun Mar Mer Gio Ven Sab Dim".split(" ");
        f.FIL = "Lun Mar Miy Huw Biy Sab Lin".split(" ");
        f.RU = "\u041f\u043d \u0412\u0442 \u0421\u0440 \u0427\u0442 \u041f\u0442 \u0421\u0431 \u0412\u0441".split(" ");
        f.NL = "Ma Di Wo Do Vr Za Zo".split(" ");
        f.ZH = "\u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d \u661f\u671f\u5929".split(" ");
        f.HI = "\u0930\u0935\u093f\u0935\u093e\u0930 \u0938\u094b\u092e\u0935\u093e\u0930 \u092e\u0902\u0917\u0932\u0935\u093e\u0930 \u092c\u0941\u0927\u0935\u093e\u0930 \u0917\u0941\u0930\u0941\u0935\u093e\u0930 \u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930 \u0936\u0928\u093f\u0935\u093e\u0930".split(" ");
        f.PT = "Se Te Qu Qu Se Sa Do".split(" ");
        f.PL = "po wt sr cz pi so ni".split(" ");
        m.EN = "January February March April May June July August September October November December".split(" ");
        m.TR = "Ocak \u015eubat Mart Nisan May\u0131s Haziran Temmuz A\u011fustos Eyl\u00fcl Ekim Kas\u0131m Aral\u0131k".split(" ");
        m.ES = "Enero Febrero Marzo Abril Mayo Junio Julio Agosto Septiembre Octubre Noviembre Diciembre".split(" ");
        m.DE = "Januar Februar M\u00e4rz April Mai Juni Juli August September Oktober November Dezember".split(" ");
        m.FR = "Janvier F\u00e9vrier Mars Avril Mai Juin Juillet Ao\u00fat Septembre Octobre Novembre D\u00e9cembre".split(" ");
        m.IT = "Gennaio Febbraio Marzo Aprile Maggio Guigno Luglio Agosto Settembre Ottobre Novembre Dicembre".split(" ");
        m.FIL = "Enero Pebrero Marso Abril Mayo Hunyo Hulyo Agosto Setyembre Oktubre Nobyembre Disyembre".split(" ");
        m.RU = "\u042f\u043d\u0432\u0430\u0440\u044c \u0424\u0435\u0432\u0440\u0430\u043b\u044c \u041c\u0430\u0440\u0442 \u0410\u043f\u0440\u0435\u043b\u044c \u041c\u0430\u0439 \u0418\u044e\u043d\u044c \u0418\u044e\u043b\u044c \u0410\u0432\u0433\u0443\u0441\u0442 \u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c \u041e\u043a\u0442\u044f\u0431\u0440\u044c \u041d\u043e\u044f\u0431\u0440\u044c \u0414\u0435\u043a\u0430\u0431\u0440\u044c".split(" ");
        m.NL = "januari februari maart april mei juni juli augustus september oktober november december".split(" ");
        m.ZH = "\u4e00\u6708 \u4e8c\u6708 \u4e09\u6708 \u56db\u6708 \u4e94\u6708 \u516d\u6708 \u4e03\u6708 \u516b\u6708 \u4e5d\u6708 \u5341\u6708 \u5341\u4e00\u6708 \u5341\u4e8c\u6708".split(" ");
        m.HI = "\u091c\u0928\u0935\u0930\u0940 \u092b\u0930\u0935\u0930\u0940 \u092e\u093e\u0930\u094d\u091a \u0905\u092a\u094d\u0930\u0948\u0932 \u092e\u0908 \u091c\u0942\u0928 \u091c\u0941\u0932\u093e\u0908 \u0905\u0917\u0938\u094d\u0924 \u0938\u093f\u0924\u0902\u092c\u0930 \u0905\u0915\u094d\u091f\u0942\u092c\u0930 \u0928\u0935\u0902\u092c\u0930 \u0926\u093f\u0938\u0902\u092c\u0930".split(" ");
        m.PT = "Janeiro Fevereiro Mar\u00e7o Abril Maio Junho Julho Agosto Setembro Outubro Novembro Dezembro".split(" ");
        m.PL = "styczen luty marzec kwiecien maj czerwiec lipiec sierpien wrzesien pazdziernik listopad grudzien".split(" ");
        e.EN = "Event(s)";
        e.TR = "Etkinlik";
        e.ES = "Evento(s)";
        e.DE = "T\u00e4tigkeit";
        e.FR = "Activit\u00e9(s)";
        e.IT = "Attivit\u00e0";
        e.FIL = "Aktibidad";
        e.RU = "\u0414\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c";
        e.NL = "Activiteit(en)";
        e.ZH = "\u4e8b\u4ef6";
        e.HI = "\u092a\u0930\u093f\u0923\u093e\u092e";
        e.PT = "Eventos";
        e.PL = "Dzia\u0142alno\u015b\u0107";
        k.EN = "Close";
        k.TR = "Kapat";
        k.ES = "Cerrar";
        k.DE = "Schlie\u00dfen";
        k.FR = "Fermer";
        k.IT = "Chiudere";
        k.FIL = "Isara";
        k.RU = "\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c";
        k.NL = "Sluiten";
        k.ZH = "\u95dc\u9589";
        k.HI = "\u092c\u0902\u0926 \u0915\u0930\u0947";
        k.PT = "Fechar";
        k.PL = "Zamkn\u0105\u0107";
        var r = new Date,
            K = r.getDate(),
            J = r.getMonth(),
            I = r.getFullYear(),
            a = c(this),
            g = function(a, b) { return c(document.createElement(a)).addClass(b) };
        r = "" === b.color2 ? b.color : b.color2;
        a.append(c('<input type="hidden" class="data1" /><input type="hidden" class="data2" />'), g("div", "jalendar-container").append(g("div", "jalendar-pages").append(g("div", "header").append(g("a", "prv-m").append(g("i", "fa fa-angle-left")), g("h1"), g("a", "nxt-m").append(g("i", "fa fa-angle-right")), g("div", "day-names")), g("div", "days"), g("div", "add-event").append(g("div", "events").append(g("h3", "").html("<span></span> " + e[b.lang]), g("div", "events-list")), g("div", "close-button").text(k[b.lang]))).attr("style",
            "background-color:" + b.color + "; background: -webkit-gradient(linear, left top, left bottom, from(" + b.color + "), to(" + r + ")); background: -webkit-linear-gradient(top, " + b.color + ", " + r + "); background : -moz-linear-gradient(top, " + b.color + ", " + r + "); background: -ms-linear-gradient(top, " + b.color + ", " + r + "); background: -o-linear-gradient(top, " + b.color + ", " + r + ");")));
        "range" == b.type && a.find(".jalendar-pages").addClass("range").append(g("input", "first-range-data").attr({ type: "hidden" }), g("input", "last-range-data").attr({ type: "hidden" }));
        for (e = 0; 42 > e; e++) a.find(".days").append(g("div", "day"));
        var A = 0;
        1 == b.sundayStart && (a.find(".day-names").append(g("h2").text(f[b.lang][6])), A = 1);
        for (e = A; 7 > e; e++) a.find(".day-names").append(g("h2").text(f[b.lang][e - A]));
        var y = new Date(b.customDay),
            p = y.getFullYear(),
            L = y.getDate(),
            h = y.getMonth(),
            F, E = function(a) { a = new Date;
                a.setYear(p);
                a.setMonth(1);
                a.setDate(29); return a = 29 == a.getDate() === !0 ? 29 : 28 },
            u = [31, E(F), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
            l = null,
            B = null,
            v = null,
            z = null,
            q = null,
            w = null;
        C();
        f = [a.find(".prv-m"),
            a.find(".nxt-m")
        ];
        a.find(".jalendar .close-button");
        var x = a.find("input.first-range-data"),
            t = a.find("input.last-range-data");
        f[1].on("click", function() { 11 <= h ? (h = 0, p++) : h++;
            C();
            D(); "range" == b.type && (G(), H()) });
        f[0].on("click", function() { dayClick = a.find(".this-month");
            0 === h ? (h = 11, p--) : h--;
            C();
            D(); "range" == b.type && (G(), H()) });
        a.on("click", ".close-button", function(b) { b.preventDefault();
            a.find(".add-event").removeClass("selected").height(0);
            a.find(".this-month.selected").removeClass("selected") });
        a.on("click",
            ".this-month:not(.disable-selecting)",
            function() {
                if ("selector" == b.type) return c(this).parent().find(".selected").removeClass("selected"), c(this).addClass("selected"), a.find("input.data1").val(a.find(".this-month.selected").attr("data-date")), a.parent().is(".jalendar-input") && (a.parent().find("input").removeClass("selected"), a.parent(".jalendar-input").find("input").val(c(this).data("date"))), null !== b.done && b.done.call(this), !1;
                if ("range" == b.type) {
                    var e = function(b) {
                            b.addClass("last-range");
                            t.val(b.attr("data-date"));
                            B = a.find(".last-range").index();
                            z = Number(a.find(".days").attr("data-month"));
                            w = Number(a.find(".days").attr("data-year"))
                        },
                        d = function(b) { b.parent().find(".day").removeClass("first-range").removeClass("range").removeClass("last-range");
                            b.addClass("first-range");
                            x.val(b.attr("data-date"));
                            l = a.find('[data-date="' + a.find(".first-range").attr("data-date") + '"]').index();
                            v = Number(a.find(".days").attr("data-month"));
                            q = Number(a.find(".days").attr("data-year"));
                            B = null;
                            t.val("") };
                    c(this).parent().find(".first-range");
                    c(this).parent().find(".last-range");
                    if (null !== l)
                        if (null !== B) d(c(this));
                        else { if (l > c(this).index()) return d(c(this)), !1;
                            e(c(this));
                            a.find("input.data1").val(x.val());
                            a.find("input.data2").val(t.val());
                            a.parent().is(".jalendar-input") && (a.parent().find("input").removeClass("selected"), a.parent(".jalendar-input").find("input").val(a.find("input.data1").val() + ", " + a.find("input.data2").val()));
                            null !== b.done && b.done.call(this) }
                    else d(c(this));
                    a.on({
                        mouseenter: function() {
                            if (null === l) return !1;
                            "" === t.val() &&
                                (a.find(".day").removeClass("range last-range"), c(this).index() > l && c(this).hasClass("this-month") && (c(this).addClass("last-range"), c(this).parent().find(".day:eq(" + l + ")").nextUntil(".this-month.last-range").addClass("range"), 0 == l && c(this).parent().find(".day:eq(0)").addClass("range")))
                        },
                        mouseleave: function() { "" === t.val() && c(this).parent().find(".day").removeClass("last-range").removeClass("range") }
                    }, ".range .day.this-month");
                    return !1
                }
                e = c(this).find(".event-single");
                a.find(".events .event-single").remove();
                D();
                "" === b.type && (a.find("input.data1").val(c(this).data("date")), c(this).addClass("selected"), a.find(".add-event").find(".events-list").html(e.clone()), a.parent().is(".jalendar-input") && a.parent(".jalendar-input").find("input").val(c(this).data("date")), 0 <= a.find(".events .event-single").length && a.find(".events h3 span").html(a.find(".events .event-single").size()), a.find(".add-event").addClass("selected").height(a.find(".add-event .events").height() + 59))
            });
        if (a.parent().is(".jalendar-input")) a.parent(".jalendar-input").find('input[type="text"], .jalendar').on("click",
            function(a) { a.stopPropagation();
                c(this).addClass("selected") });
        c("html").on("click", function() { c(".jalendar-input input").removeClass("selected") })
    }
})(jQuery);